schema_version: 1

context:
  name: pylegendmeta
  version: "1.3.1"
  # no-arch packages can't use selectors, so avoid
  # 'osx and match(python, "<3.10")' selector on psycopg2-binary <=2.9.9
  # by going to Python 3.10 even though source is 3.9+.
  python_min: "3.10"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/pylegendmeta-${{ version }}.tar.gz
  sha256: e8534d8abd762e257c4e4ecc2fbd1c0efd3df3489639be70ca72cd550ba6de11

build:
  number: 0
  noarch: python
  script: ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  python:
    entry_points:
      - validate-legend-chmaps = legendmeta.police:validate_legend_channel_map
      - validate-legend-detdb = legendmeta.police:validate_legend_detector_db
      - validate-validity = legendmeta.police:validate_validity

requirements:
  host:
    - python ${{ python_min }}.*
    - pip
    - setuptools >=42.0.0
    - setuptools-scm >=3.4
  run:
    - python >=${{ python_min }}
    - packaging
    - dbetto >=1.2.2
    - gitpython
    - pandas
    - pyyaml
    - psycopg2-binary
    - sqlalchemy >=2

tests:
  - python:
      imports:
        - legendmeta
      pip_check: true
      python_version: ${{ python_min }}.*
  - requirements:
      run:
        - python ${{ python_min }}.*
        - pip
    script:
      - conda list
      - validate-legend-chmaps --help
      - validate-legend-detdb --help
      - validate-validity --help

about:
  license: GPL-3.0-only
  license_file: LICENSE
  summary: Python LEGEND-metadata implementation
  description: |
    Access [legend-metadata](https://github.com/legend-exp/legend-metadata)
    through [dbetto](https://dbetto.readthedocs.io/).
  homepage: https://github.com/legend-exp/pylegendmeta
  repository: https://github.com/legend-exp/pylegendmeta
  documentation: https://pylegendmeta.readthedocs.io/

extra:
  recipe-maintainers:
    - matthewfeickert
